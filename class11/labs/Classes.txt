python
>>> class Point:
... pass
...
>>> a = Point()
a.x = 4
a.y = 5

b = Point()
b.x #attribute error

^
adding attributes ad hoc

Can automatically initialize with x & y using constructors
Class Foo:
	__init__(self):
		whatever is in this function will run everytime the class is initialized

Class Point:
	def __init__(self, x, y):
		self.x = x
		self.y = y

a = Point() #TypeError
a = Point(1,1) #OK!

__str__(self):
	returns a string representation of the class

Class Point:
	def __init__(self, x, y):
		self.x = x
		self.y = y
	def __str__(self):
		return "(%s, %s)" %(self.x, self.y)



(mtec2002)ENT-V321-010:labs student$ python
Python 2.6.1 (r261:67515, Jun 24 2010, 21:47:49) 
[GCC 4.2.1 (Apple Inc. build 5646)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import point as p
>>> Point()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Point' is not defined
>>> p.Point()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: __init__() takes exactly 3 arguments (1 given)
>>> p.Point(1,2)
<point.Point instance at 0x1004dc2d8>
>>> 
